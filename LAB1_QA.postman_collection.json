{
	"info": {
		"_postman_id": "c50081b6-1689-472b-b0d5-eb51e172914c",
		"name": "LAB1_QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18570713"
	},
	"item": [
		{
			"name": "200OK!",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UserID=333",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test User Id is 333\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.args.userId).to.eql(\"333\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Todos title test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Title Test\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"delectus aut autem\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Completed Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Completed is false\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.completed).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Response elements>2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has more than two elements\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).length.above(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Listed elements with selected ID\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    for(let i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].userId).is.eql(1);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List only entries with selected ID and completed = true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has only completed elements for user with id = 1\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    for(let i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].userId).is.eql(1);\r",
							"        pm.expect(jsonData[i].completed).is.eql(true);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?completed=true&userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "completed",
							"value": "true"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all completed elements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has only completed elements\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    for(let i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].completed).is.eql(true);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?completed=true",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "completed",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Response with ID=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test Response has only one element with id = 1\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData).is.not.eql(Array)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new element by userID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User successfully created\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(13);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 13,\r\n    \"title\": \"My Title\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new todo with specific title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User successfully created\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(122);\r",
							"    pm.expect(jsonData.title).to.eql(\"My Title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 122,\r\n    \"title\": \"My Title\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change userID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User has been changed\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(333);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"completed\": true,\r\n    \"title\": \"My New title\",\r\n    \"userId\": 333\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete todo by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete todo by id\", function () {\r",
							"    pm.expect(pm.response.code).is.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/10",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mark entry as completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Task complete!\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.completed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"completed\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change title of todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Title has been changed!\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"New title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"New title\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}